{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a3437bb5293b78c68927.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\"\r\nimport randomize from \"randomatic\"\r\nimport Router from \"next/router\"\r\nimport { motion } from \"framer-motion\"\r\nimport HeadTag from \"../components/HeadTag\"\r\nimport styled from \"styled-components\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport { useScrollYPosition } from \"react-use-scroll-position\"\r\nimport ReactFitText from \"react-fittext\"\r\nimport BelowFold from \"../components/BelowFold\"\r\nimport Logo from \"../components/Logo\"\r\n\r\nconst Home = () => {\r\n  const initialPassword = randomize(\"Aa0!\", 10)\r\n  const [password, setPassword] = useState(initialPassword)\r\n\r\n  const [snackbarIsOpen, setSnackbarIsOpen] = useState(false)\r\n  const passwordInputRef = useRef(null)\r\n\r\n  const scrollYProgress = useScrollYPosition()\r\n\r\n  const themes = {\r\n    default: {\r\n      name: \"default\",\r\n      topbarcolor: \"#333333\",\r\n      background: \"white\",\r\n      gradientBg: \"26deg, #00dbde 0%, #fc00ff 100%\",\r\n      inputGradientBg: \"26deg, #00dbde 0%, #fc00ff 100%\",\r\n      inputBoxShadow: \"#ffffff42\",\r\n      overlayBoxShadow: \"#a3b1d842\",\r\n      snackbarBackground: \"#333333\"\r\n    },\r\n    dark: {\r\n      name: \"dark\",\r\n      topbarcolor: \"#2f3437\",\r\n      background: \"#2f3437\",\r\n      gradientBg: \"26deg,#ffffff 0%,#afafaf 100%\",\r\n      inputGradientBg: \"26deg, #00dbde 0%, #fc00ff 100%\",\r\n      inputBoxShadow: \"#0a0a0a42\",\r\n      overlayBoxShadow: \"#0a0a0a42\",\r\n      snackbarBackground: \"#5eab3e\"\r\n    }\r\n  }\r\n\r\n  const [colorScheme, setColorScheme] = useState(themes.dark)\r\n\r\n  const generateAndCopyPassword = (pattern, length) => {\r\n    setPassword(randomize(\"Aa0!\", 10))\r\n    passwordInputRef.current.select()\r\n    document.execCommand(\"copy\")\r\n    setSnackbarIsOpen(true)\r\n  }\r\n\r\n  const handleSnackbarClose = () => setSnackbarIsOpen(false)\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <HeadTag />\r\n\r\n      <AppContainer colorScheme={colorScheme}>\r\n        <div id=\"app-container\">\r\n          <motion.div\r\n            id=\"menu-bar\"\r\n            animate={{\r\n              opacity: 1,\r\n              filter: \"blur(0px)\"\r\n            }}\r\n            initial={{\r\n              opacity: 0,\r\n              filter: \"blur(10px)\"\r\n            }}\r\n            transition={{ ease: \"easeOut\", duration: 0.2 }}\r\n            className={scrollYProgress < 1 ? \"\" : \"scrolled-menu-bar\"}\r\n          >\r\n            <h1 id=\"menu-title\" onClick={() => Router.reload()}>\r\n              password.kiwi\r\n              {/* <span>ü•ù</span> */}\r\n            <Logo />\r\n            </h1>\r\n          </motion.div>\r\n\r\n          <motion.div\r\n            id=\"main-box\"\r\n            animate={{ scale: 1, opacity: 1, filter: \"blur(0px)\" }}\r\n            initial={{ scale: 0.5, opacity: 0, filter: \"blur(10px)\" }}\r\n            transition={{ ease: \"easeOut\", duration: 0.2 }}\r\n          >\r\n            <div id=\"input-component\">\r\n              <ReactFitText compressor={1.3} maxFontSize={50}>\r\n                <h1\r\n                  style={{ color: \"white\", textShadow: \"0px 1px 3px #1face1\" }}\r\n                >\r\n                  secure password generator\r\n                </h1>\r\n              </ReactFitText>\r\n              <motion.input\r\n                id=\"generated-password-input\"\r\n                name=\"generated-password\"\r\n                aria-label=\"generated-password\"\r\n                className=\"input-gradient-bg\"\r\n                type=\"text\"\r\n                readOnly=\"readonly\"\r\n                ref={passwordInputRef}\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                onClick={() => generateAndCopyPassword()}\r\n                spellCheck={false}\r\n                whileHover={{ scale: 1.05 }}\r\n                whileTap={{ scale: 0.95, filter: \"blur(3px)\" }}\r\n                transition={{ ease: \"easeOut\", duration: 0.3 }}\r\n              />\r\n\r\n              <h4\r\n                id=\"click-to-copy\"\r\n                style={{ color: \"white\" }}\r\n                onClick={() => generateAndCopyPassword()}\r\n              >\r\n                click to copy\r\n              </h4>\r\n            </div>\r\n          </motion.div>\r\n\r\n          <StyledSnack\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\"\r\n            }}\r\n            colorScheme={colorScheme}\r\n            open={snackbarIsOpen}\r\n            autoHideDuration={1000}\r\n            message={<span id=\"message-id\">copied to clipboard!</span>}\r\n            onClose={handleSnackbarClose}\r\n          />\r\n\r\n          <BelowFold />\r\n        </div>\r\n      </AppContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst AppContainer = styled.div`\r\n  #menu-bar {\r\n    display: flex;\r\n    align-content: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    position: sticky;\r\n    top: 0px;\r\n    z-index: 10;\r\n    box-shadow: 0px 0px 1px #1ac3e138;\r\n    background: #00000014;\r\n    height: 10vh;\r\n  }\r\n\r\n  .scrolled-menu-bar {\r\n    box-shadow: 0px 0px 7px #31313138 !important;\r\n    background: linear-gradient(0deg, #202025, #282935) !important;\r\n  }\r\n\r\n  #main-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    align-self: center;\r\n    justify-content: center;\r\n    justify-items: center;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    margin-top: -13vh;\r\n    background-image: url(\"../static/shape-1.png\");\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: top right;\r\n  }\r\n\r\n  input#generated-password-input {\r\n    border-radius: 50vw;\r\n    font-size: 30px;\r\n    height: 80px;\r\n    text-align: center;\r\n    letter-spacing: 5px;\r\n    border: 0px solid transparent;\r\n    box-shadow: 0px 2px 10px #44444442;\r\n    padding: 10px 0px 5px 0px;\r\n    font-weight: 700;\r\n    color: white;\r\n    -webkit-tap-highlight-color: transparent;\r\n    justify-self: center;\r\n    align-self: center;\r\n    max-width: 100%;\r\n  }\r\n  input#generated-password-input ::selection {\r\n    background: transparent;\r\n  }\r\n  input#generated-password-input:focus {\r\n    outline: 1px transparent solid;\r\n  }\r\n  input#generated-password-input:hover {\r\n    cursor: pointer;\r\n  }\r\n  h1#menu-title {\r\n    padding: 1vh 0vh;\r\n    color: white;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  p {\r\n    /* width: max-content; */\r\n    -webkit-tap-highlight-color: transparent;\r\n    font-size: 1.05rem;\r\n  }\r\n  #app-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-content: center;\r\n    min-height: 100vh;\r\n    background: linear-gradient(129deg, #292929, #272727);\r\n  }\r\n\r\n  body {\r\n    margin: 0px;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6,\r\n  input {\r\n    font-family: \"Josefin Sans\", sans-serif;\r\n  }\r\n\r\n  p {\r\n    font-family: \"Josefin Sans\", sans-serif;\r\n  }\r\n\r\n  a {\r\n    color: ${({ theme }) => theme.colors.darkgray};\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n  }\r\n\r\n  h4#click-to-copy {\r\n    color: ${({ theme }) => theme.colors.darkgray};\r\n    text-transform: uppercase;\r\n    letter-spacing: 7px;\r\n    opacity: 0.8;\r\n  }\r\n\r\n  .text-container {\r\n    display: flex;\r\n    padding: 2vh 8vw;\r\n    border-radius: 20px;\r\n    font-family: \"Colfax\";\r\n    align-self: center;\r\n    max-width: 100%;\r\n  }\r\n\r\n  #input-component {\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* position: sticky;\r\n    top: 10vh; */\r\n    z-index: 2;\r\n    padding: 5vh;\r\n    width: 100vw;\r\n    align-self: center;\r\n    background: linear-gradient(45deg, #335fdc52, #4c4c4c08);\r\n    border-radius: 20px;\r\n    box-shadow: 0px 5px 5px #18191957;\r\n  }\r\n\r\n  .gradient-bg {\r\n    background: ${({ colorScheme }) =>\r\n      `linear-gradient(${colorScheme.gradientBg})`};\r\n  }\r\n\r\n  .input-gradient-bg {\r\n    background: ${({ colorScheme }) =>\r\n      `linear-gradient(${colorScheme.inputGradientBg})`};\r\n  }\r\n\r\n  .clip-text {\r\n    background-clip: text;\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    #input-component {\r\n      width: 67vw;\r\n    }\r\n\r\n    #main-box {\r\n      margin-top: -10vh;\r\n    }\r\n  }\r\n\r\n  @media (orientation: landscape) {\r\n    #generated-password-input {\r\n      max-width: 50vw;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledSnack = styled(Snackbar)`\r\n  div {\r\n    background: transparent;\r\n    flex-grow: 0;\r\n    padding: 6px 36px;\r\n  }\r\n  .MuiTypography-root {\r\n    background: ${({ colorScheme }) =>\r\n      `linear-gradient(${colorScheme.inputGradientBg})`};\r\n  }\r\n  span {\r\n    font-family: \"Josefin Sans\";\r\n  }\r\n`\r\n\r\nexport default Home\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAXA;AACA;AAVA;AAAA;AAAA;AAAA;AACA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAmGA;AAAA;AAAA;AAMA;AAAA;AAAA;AA8BA;AAAA;AAAA;AAKA;AAAA;AAAA;AA2BA;AAOA;AAAA;AAAA;AAQA;;;;A","sourceRoot":""}